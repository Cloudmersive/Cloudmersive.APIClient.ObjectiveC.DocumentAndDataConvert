#import <Foundation/Foundation.h>
#import "CMApi.h"

/**
* convertapi
* Convert API lets you effortlessly convert file formats and types.
*
* OpenAPI spec version: v1
* 
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/



@interface CMEditHtmlApi: NSObject <CMApi>

extern NSString* kCMEditHtmlApiErrorDomain;
extern NSInteger kCMEditHtmlApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(CMApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// Append a Heading to an HTML Document
/// Appends a heading to the end of an HTML document.
///
/// @param headingText The text content to be used in the header.
/// @param inputFile Optional: Input file to perform the operation on. (optional)
/// @param inputFileUrl Optional: URL of a file to operate on as input. (optional)
/// @param headingSize Optional: The heading size number. Default is 1. Accepts values between 1 and 6. (optional)
/// @param cssStyle Optional: The CSS style for the heading. (optional)
/// 
///  code:200 message:"OK"
///
/// @return NSData*
-(NSURLSessionTask*) editHtmlHtmlAppendHeadingWithHeadingText: (NSString*) headingText
    inputFile: (NSURL*) inputFile
    inputFileUrl: (NSString*) inputFileUrl
    headingSize: (NSNumber*) headingSize
    cssStyle: (NSString*) cssStyle
    completionHandler: (void (^)(NSData* output, NSError* error)) handler;


/// Append an Image to an HTML Document from a URL
/// Appends an image to the end of an HTML document using a URL.
///
/// @param imageUrl The URL for the image.
/// @param inputFile Optional: Input file to perform the operation on. (optional)
/// @param inputFileUrl Optional: URL of a file to operate on as input. (optional)
/// @param cssStyle Optional: CSS style for the image. (optional)
/// 
///  code:200 message:"OK"
///
/// @return NSData*
-(NSURLSessionTask*) editHtmlHtmlAppendImageFromUrlWithImageUrl: (NSString*) imageUrl
    inputFile: (NSURL*) inputFile
    inputFileUrl: (NSString*) inputFileUrl
    cssStyle: (NSString*) cssStyle
    completionHandler: (void (^)(NSData* output, NSError* error)) handler;


/// Append a Base64 Inline Image to an HTML Document
/// Appends a base64 inline image to the end of an HTML document from an input file or URL.
///
/// @param inputFile Optional: Input file to perform the operation on. (optional)
/// @param inputFileUrl Optional: URL of a file to operate on as input. (optional)
/// @param imageFile Optional: Image file to be appended as base64 inline image. (optional)
/// @param imageUrl Optional: Image URL to be appended as base64 inline image. (optional)
/// @param cssStyle Optional: CSS style for the image. (optional)
/// @param imageExtension Optional: The extension (JPG, PNG, GIF, etc.) of the image file. Recommended if uploading an imageFile directly, instead of using imageUrl. If no extension can be determined, will default to JPG. (optional)
/// 
///  code:200 message:"OK"
///
/// @return NSData*
-(NSURLSessionTask*) editHtmlHtmlAppendImageInlineWithInputFile: (NSURL*) inputFile
    inputFileUrl: (NSString*) inputFileUrl
    imageFile: (NSURL*) imageFile
    imageUrl: (NSString*) imageUrl
    cssStyle: (NSString*) cssStyle
    imageExtension: (NSString*) imageExtension
    completionHandler: (void (^)(NSData* output, NSError* error)) handler;


/// Append a Paragraph to an HTML Document
/// Appends a paragraph to the end of an HTML document.
///
/// @param paragraphText The text content to be used in the paragraph.
/// @param inputFile Optional: Input file to perform the operation on. (optional)
/// @param inputFileUrl Optional: URL of a file to operate on as input. (optional)
/// @param cssStyle Optional: The CSS style for the paragraph. (optional)
/// 
///  code:200 message:"OK"
///
/// @return NSData*
-(NSURLSessionTask*) editHtmlHtmlAppendParagraphWithParagraphText: (NSString*) paragraphText
    inputFile: (NSURL*) inputFile
    inputFileUrl: (NSString*) inputFileUrl
    cssStyle: (NSString*) cssStyle
    completionHandler: (void (^)(NSData* output, NSError* error)) handler;


/// Create a Blank HTML Document
/// Returns a blank HTML Document format file.  The file is blank, with no contents by default.  Use the optional input parameters to add various starting elements.  Use additional editing commands such as Append Header, Append Paragraph or Append Image from URL to populate the document.
///
/// @param title Optional: The title of the HTML document (optional)
/// @param cssUrl Optional: A CSS style URL to be added to the document. (optional)
/// @param cssInline Optional: An inline CSS style to be added to the document. (optional)
/// @param javascriptUrl Optional: Javascript URL to be added to the document. (optional)
/// @param javascriptInline Optional: Inline Javascript to be added to the document. (optional)
/// 
///  code:200 message:"OK"
///
/// @return NSData*
-(NSURLSessionTask*) editHtmlHtmlCreateBlankDocumentWithTitle: (NSString*) title
    cssUrl: (NSString*) cssUrl
    cssInline: (NSString*) cssInline
    javascriptUrl: (NSString*) javascriptUrl
    javascriptInline: (NSString*) javascriptInline
    completionHandler: (void (^)(NSData* output, NSError* error)) handler;



@end
