#import <Foundation/Foundation.h>
#import "CMAutodetectDocumentValidationResult.h"
#import "CMDocumentValidationResult.h"
#import "CMApi.h"

/**
* convertapi
* Convert API lets you effortlessly convert file formats and types.
*
* OpenAPI spec version: v1
* 
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/



@interface CMValidateDocumentApi: NSObject <CMApi>

extern NSString* kCMValidateDocumentApiErrorDomain;
extern NSInteger kCMValidateDocumentApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(CMApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// Autodetect content type and validate
/// Automatically detect the type of content, verify and validate that the content is indeed fully valid at depth, and then report the validation result.
///
/// @param inputFile Input file to perform the operation on.
/// 
///  code:200 message:"OK"
///
/// @return CMAutodetectDocumentValidationResult*
-(NSURLSessionTask*) validateDocumentAutodetectValidationWithInputFile: (NSURL*) inputFile
    completionHandler: (void (^)(CMAutodetectDocumentValidationResult* output, NSError* error)) handler;


/// Validate a Word document (DOCX)
/// Validate a Word document (DOCX); if the document is not valid, identifies the errors in the document
///
/// @param inputFile Input file to perform the operation on.
/// 
///  code:200 message:"OK"
///
/// @return CMDocumentValidationResult*
-(NSURLSessionTask*) validateDocumentDocxValidationWithInputFile: (NSURL*) inputFile
    completionHandler: (void (^)(CMDocumentValidationResult* output, NSError* error)) handler;


/// Validate if a file is executable
/// Validate if an input file is a binary executable file; if the document is not valid
///
/// @param inputFile Input file to perform the operation on.
/// 
///  code:200 message:"OK"
///
/// @return CMDocumentValidationResult*
-(NSURLSessionTask*) validateDocumentExecutableValidationWithInputFile: (NSURL*) inputFile
    completionHandler: (void (^)(CMDocumentValidationResult* output, NSError* error)) handler;


/// Validate a JSON file
/// Validate a JSON (JavaScript Object Notation) document file; if the document is not valid, identifies the errors in the document
///
/// @param inputFile Input file to perform the operation on.
/// 
///  code:200 message:"OK"
///
/// @return CMDocumentValidationResult*
-(NSURLSessionTask*) validateDocumentJsonValidationWithInputFile: (NSURL*) inputFile
    completionHandler: (void (^)(CMDocumentValidationResult* output, NSError* error)) handler;


/// Validate a PDF document file
/// Validate a PDF document; if the document is not valid, identifies the errors in the document
///
/// @param inputFile Input file to perform the operation on.
/// 
///  code:200 message:"OK"
///
/// @return CMDocumentValidationResult*
-(NSURLSessionTask*) validateDocumentPdfValidationWithInputFile: (NSURL*) inputFile
    completionHandler: (void (^)(CMDocumentValidationResult* output, NSError* error)) handler;


/// Validate a PowerPoint presentation (PPTX)
/// Validate a PowerPoint presentation (PPTX); if the document is not valid, identifies the errors in the document
///
/// @param inputFile Input file to perform the operation on.
/// 
///  code:200 message:"OK"
///
/// @return CMDocumentValidationResult*
-(NSURLSessionTask*) validateDocumentPptxValidationWithInputFile: (NSURL*) inputFile
    completionHandler: (void (^)(CMDocumentValidationResult* output, NSError* error)) handler;


/// Validate a Excel document (XLSX)
/// Validate a Excel document (XLSX); if the document is not valid, identifies the errors in the document
///
/// @param inputFile Input file to perform the operation on.
/// 
///  code:200 message:"OK"
///
/// @return CMDocumentValidationResult*
-(NSURLSessionTask*) validateDocumentXlsxValidationWithInputFile: (NSURL*) inputFile
    completionHandler: (void (^)(CMDocumentValidationResult* output, NSError* error)) handler;


/// Validate an XML file
/// Validate an XML document file; if the document is not valid, identifies the errors in the document
///
/// @param inputFile Input file to perform the operation on.
/// 
///  code:200 message:"OK"
///
/// @return CMDocumentValidationResult*
-(NSURLSessionTask*) validateDocumentXmlValidationWithInputFile: (NSURL*) inputFile
    completionHandler: (void (^)(CMDocumentValidationResult* output, NSError* error)) handler;



@end
