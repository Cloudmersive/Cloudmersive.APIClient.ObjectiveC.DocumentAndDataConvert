#import <Foundation/Foundation.h>
#import "CMSplitDocxDocumentResult.h"
#import "CMSplitPdfResult.h"
#import "CMSplitPptxPresentationResult.h"
#import "CMSplitTextDocumentByLinesResult.h"
#import "CMSplitTextDocumentByStringResult.h"
#import "CMSplitXlsxWorksheetResult.h"
#import "CMApi.h"

/**
* convertapi
* Convert API lets you effortlessly convert file formats and types.
*
* OpenAPI spec version: v1
* 
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/



@interface CMSplitDocumentApi: NSObject <CMApi>

extern NSString* kCMSplitDocumentApiErrorDomain;
extern NSInteger kCMSplitDocumentApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(CMApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// Split a single Word Document DOCX into Separate Documents by Page
/// Split a Word DOCX Document, comprised of multiple pages into separate Word DOCX document files, with each containing exactly one page.
///
/// @param inputFile Input file to perform the operation on.
/// @param returnDocumentContents Set to true to return the contents of each Worksheet directly, set to false to only return URLs to each resulting document.  Default is true. (optional)
/// 
///  code:200 message:"OK"
///
/// @return CMSplitDocxDocumentResult*
-(NSURLSessionTask*) splitDocumentDocxWithInputFile: (NSURL*) inputFile
    returnDocumentContents: (NSNumber*) returnDocumentContents
    completionHandler: (void (^)(CMSplitDocxDocumentResult* output, NSError* error)) handler;


/// Split a PDF file into separate PDF files, one per page
/// Split an input PDF file into separate pages, comprised of one PDF file per page.
///
/// @param inputFile Input file to perform the operation on.
/// @param returnDocumentContents Set to true to directly return all of the document contents in the DocumentContents field; set to false to return contents as temporary URLs (more efficient for large operations).  Default is false. (optional)
/// 
///  code:200 message:"OK"
///
/// @return CMSplitPdfResult*
-(NSURLSessionTask*) splitDocumentPdfByPageWithInputFile: (NSURL*) inputFile
    returnDocumentContents: (NSNumber*) returnDocumentContents
    completionHandler: (void (^)(CMSplitPdfResult* output, NSError* error)) handler;


/// Split a single PowerPoint Presentation PPTX into Separate Slides
/// Split an PowerPoint PPTX Presentation, comprised of multiple slides into separate PowerPoint PPTX presentation files, with each containing exactly one slide.
///
/// @param inputFile Input file to perform the operation on.
/// @param returnDocumentContents Set to true to return the contents of each presentation directly, set to false to only return URLs to each resulting presentation.  Default is true. (optional)
/// 
///  code:200 message:"OK"
///
/// @return CMSplitPptxPresentationResult*
-(NSURLSessionTask*) splitDocumentPptxWithInputFile: (NSURL*) inputFile
    returnDocumentContents: (NSNumber*) returnDocumentContents
    completionHandler: (void (^)(CMSplitPptxPresentationResult* output, NSError* error)) handler;


/// Split a single Text file (txt) into lines
/// Split a Text (txt) Document by line, returning each line separately in order.  Supports multiple types of newlines.
///
/// @param inputFile Input file to perform the operation on.
/// 
///  code:200 message:"OK"
///
/// @return CMSplitTextDocumentByLinesResult*
-(NSURLSessionTask*) splitDocumentTxtByLineWithInputFile: (NSURL*) inputFile
    completionHandler: (void (^)(CMSplitTextDocumentByLinesResult* output, NSError* error)) handler;


/// Split a single Text file (txt) by a string delimiter
/// Split a Text (txt) Document by a string delimiter, returning each component of the string as an array of strings.
///
/// @param inputFile Input file to perform the operation on.
/// @param splitDelimiter Required; String to split up the input file on
/// @param skipEmptyElements Optional; If true, empty elements will be skipped in the output (optional)
/// 
///  code:200 message:"OK"
///
/// @return CMSplitTextDocumentByStringResult*
-(NSURLSessionTask*) splitDocumentTxtByStringWithInputFile: (NSURL*) inputFile
    splitDelimiter: (NSString*) splitDelimiter
    skipEmptyElements: (NSNumber*) skipEmptyElements
    completionHandler: (void (^)(CMSplitTextDocumentByStringResult* output, NSError* error)) handler;


/// Split a single Excel XLSX into Separate Worksheets
/// Split an Excel XLSX Spreadsheet, comprised of multiple Worksheets (or Tabs) into separate Excel XLSX spreadsheet files, with each containing exactly one Worksheet.
///
/// @param inputFile Input file to perform the operation on.
/// @param returnDocumentContents Set to true to return the contents of each Worksheet directly, set to false to only return URLs to each resulting worksheet.  Default is true. (optional)
/// 
///  code:200 message:"OK"
///
/// @return CMSplitXlsxWorksheetResult*
-(NSURLSessionTask*) splitDocumentXlsxWithInputFile: (NSURL*) inputFile
    returnDocumentContents: (NSNumber*) returnDocumentContents
    completionHandler: (void (^)(CMSplitXlsxWorksheetResult* output, NSError* error)) handler;



@end
